<?php
/**
 * InitializeReturn
 *
 * PHP version 5
 *
 * @category Class
 * @package  Cbdesk\Kauflandv2\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Kaufland.de Seller API v2
 *
 * This is the Kaufland.de Seller API v2. You can find more information on [https://sellerapi.kaufland.com/](https://sellerapi.kaufland.com/)
 *
 * OpenAPI spec version: 2.9.1
 * Contact: seller-api-support@kaufland-online.de
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.42
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Cbdesk\Kauflandv2\Api\Model;

use \ArrayAccess;
use \Cbdesk\Kauflandv2\Api\ObjectSerializer;

/**
 * InitializeReturn Class Doc Comment
 *
 * @category Class
 * @package  Cbdesk\Kauflandv2\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InitializeReturn implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InitializeReturn';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_return' => '\Cbdesk\Kauflandv2\Api\Model\LongInteger',
'ts_created_iso' => '\DateTime',
'ts_updated_iso' => '\DateTime',
'storefront' => '\Cbdesk\Kauflandv2\Api\Model\Storefront',
'tracking_provider' => 'string',
'tracking_code' => 'string',
'status' => '\Cbdesk\Kauflandv2\Api\Model\ReturnStatus',
'fulfillment_type' => '\Cbdesk\Kauflandv2\Api\Model\FulfillmentType',
'return_units' => '\Cbdesk\Kauflandv2\Api\Model\ReturnUnit[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_return' => null,
'ts_created_iso' => 'date-time',
'ts_updated_iso' => 'date-time',
'storefront' => null,
'tracking_provider' => null,
'tracking_code' => null,
'status' => null,
'fulfillment_type' => null,
'return_units' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_return' => 'id_return',
'ts_created_iso' => 'ts_created_iso',
'ts_updated_iso' => 'ts_updated_iso',
'storefront' => 'storefront',
'tracking_provider' => 'tracking_provider',
'tracking_code' => 'tracking_code',
'status' => 'status',
'fulfillment_type' => 'fulfillment_type',
'return_units' => 'return_units'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_return' => 'setIdReturn',
'ts_created_iso' => 'setTsCreatedIso',
'ts_updated_iso' => 'setTsUpdatedIso',
'storefront' => 'setStorefront',
'tracking_provider' => 'setTrackingProvider',
'tracking_code' => 'setTrackingCode',
'status' => 'setStatus',
'fulfillment_type' => 'setFulfillmentType',
'return_units' => 'setReturnUnits'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_return' => 'getIdReturn',
'ts_created_iso' => 'getTsCreatedIso',
'ts_updated_iso' => 'getTsUpdatedIso',
'storefront' => 'getStorefront',
'tracking_provider' => 'getTrackingProvider',
'tracking_code' => 'getTrackingCode',
'status' => 'getStatus',
'fulfillment_type' => 'getFulfillmentType',
'return_units' => 'getReturnUnits'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_return'] = isset($data['id_return']) ? $data['id_return'] : null;
        $this->container['ts_created_iso'] = isset($data['ts_created_iso']) ? $data['ts_created_iso'] : null;
        $this->container['ts_updated_iso'] = isset($data['ts_updated_iso']) ? $data['ts_updated_iso'] : null;
        $this->container['storefront'] = isset($data['storefront']) ? $data['storefront'] : null;
        $this->container['tracking_provider'] = isset($data['tracking_provider']) ? $data['tracking_provider'] : null;
        $this->container['tracking_code'] = isset($data['tracking_code']) ? $data['tracking_code'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['fulfillment_type'] = isset($data['fulfillment_type']) ? $data['fulfillment_type'] : null;
        $this->container['return_units'] = isset($data['return_units']) ? $data['return_units'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id_return'] === null) {
            $invalidProperties[] = "'id_return' can't be null";
        }
        if ($this->container['ts_created_iso'] === null) {
            $invalidProperties[] = "'ts_created_iso' can't be null";
        }
        if ($this->container['ts_updated_iso'] === null) {
            $invalidProperties[] = "'ts_updated_iso' can't be null";
        }
        if ($this->container['storefront'] === null) {
            $invalidProperties[] = "'storefront' can't be null";
        }
        if ($this->container['tracking_provider'] === null) {
            $invalidProperties[] = "'tracking_provider' can't be null";
        }
        if ($this->container['tracking_code'] === null) {
            $invalidProperties[] = "'tracking_code' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['fulfillment_type'] === null) {
            $invalidProperties[] = "'fulfillment_type' can't be null";
        }
        if ($this->container['return_units'] === null) {
            $invalidProperties[] = "'return_units' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_return
     *
     * @return \Cbdesk\Kauflandv2\Api\Model\LongInteger
     */
    public function getIdReturn()
    {
        return $this->container['id_return'];
    }

    /**
     * Sets id_return
     *
     * @param \Cbdesk\Kauflandv2\Api\Model\LongInteger $id_return id_return
     *
     * @return $this
     */
    public function setIdReturn($id_return)
    {
        $this->container['id_return'] = $id_return;

        return $this;
    }

    /**
     * Gets ts_created_iso
     *
     * @return \DateTime
     */
    public function getTsCreatedIso()
    {
        return $this->container['ts_created_iso'];
    }

    /**
     * Sets ts_created_iso
     *
     * @param \DateTime $ts_created_iso ts_created_iso
     *
     * @return $this
     */
    public function setTsCreatedIso($ts_created_iso)
    {
        $this->container['ts_created_iso'] = $ts_created_iso;

        return $this;
    }

    /**
     * Gets ts_updated_iso
     *
     * @return \DateTime
     */
    public function getTsUpdatedIso()
    {
        return $this->container['ts_updated_iso'];
    }

    /**
     * Sets ts_updated_iso
     *
     * @param \DateTime $ts_updated_iso ts_updated_iso
     *
     * @return $this
     */
    public function setTsUpdatedIso($ts_updated_iso)
    {
        $this->container['ts_updated_iso'] = $ts_updated_iso;

        return $this;
    }

    /**
     * Gets storefront
     *
     * @return \Cbdesk\Kauflandv2\Api\Model\Storefront
     */
    public function getStorefront()
    {
        return $this->container['storefront'];
    }

    /**
     * Sets storefront
     *
     * @param \Cbdesk\Kauflandv2\Api\Model\Storefront $storefront storefront
     *
     * @return $this
     */
    public function setStorefront($storefront)
    {
        $this->container['storefront'] = $storefront;

        return $this;
    }

    /**
     * Gets tracking_provider
     *
     * @return string
     */
    public function getTrackingProvider()
    {
        return $this->container['tracking_provider'];
    }

    /**
     * Sets tracking_provider
     *
     * @param string $tracking_provider tracking_provider
     *
     * @return $this
     */
    public function setTrackingProvider($tracking_provider)
    {
        $this->container['tracking_provider'] = $tracking_provider;

        return $this;
    }

    /**
     * Gets tracking_code
     *
     * @return string
     */
    public function getTrackingCode()
    {
        return $this->container['tracking_code'];
    }

    /**
     * Sets tracking_code
     *
     * @param string $tracking_code tracking_code
     *
     * @return $this
     */
    public function setTrackingCode($tracking_code)
    {
        $this->container['tracking_code'] = $tracking_code;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Cbdesk\Kauflandv2\Api\Model\ReturnStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Cbdesk\Kauflandv2\Api\Model\ReturnStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets fulfillment_type
     *
     * @return \Cbdesk\Kauflandv2\Api\Model\FulfillmentType
     */
    public function getFulfillmentType()
    {
        return $this->container['fulfillment_type'];
    }

    /**
     * Sets fulfillment_type
     *
     * @param \Cbdesk\Kauflandv2\Api\Model\FulfillmentType $fulfillment_type fulfillment_type
     *
     * @return $this
     */
    public function setFulfillmentType($fulfillment_type)
    {
        $this->container['fulfillment_type'] = $fulfillment_type;

        return $this;
    }

    /**
     * Gets return_units
     *
     * @return \Cbdesk\Kauflandv2\Api\Model\ReturnUnit[]
     */
    public function getReturnUnits()
    {
        return $this->container['return_units'];
    }

    /**
     * Sets return_units
     *
     * @param \Cbdesk\Kauflandv2\Api\Model\ReturnUnit[] $return_units return_units
     *
     * @return $this
     */
    public function setReturnUnits($return_units)
    {
        $this->container['return_units'] = $return_units;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
